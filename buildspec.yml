# Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0
version: 0.2
env:
  secrets-manager:
    SONAR_TOKEN: "SonarQubeUserSecret-Oa8WDsR0iMmt:SONAR_TOKEN"
    SONAR_HOST_URL: "SonarQubeUserSecret-Oa8WDsR0iMmt:SONAR_HOST_URL"
    ORGANIZATION: "SonarQubeUserSecret-Oa8WDsR0iMmt:Organization"
    PROJECT: "SonarQubeUserSecret-Oa8WDsR0iMmt:Project"

phases:
  install:
    runtime-versions:
      java: corretto17

    commands:
      - apt-get update -y
      - apt-get install -y maven
      - pip3 install --upgrade awscli
      - wget https://dlcdn.apache.org/maven/maven-3/3.8.9/binaries/apache-maven-3.8.9-bin.tar.gz
      - tar xzf apache-maven-3.8.9-bin.tar.gz
      - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-7.3.0.5189-linux-x64.zip
      - unzip ./sonar-scanner-cli-7.3.0.5189-linux-x64.zip
      - export PATH=$PATH:/sonar-scanner-7.3.0.5189-linux/bin/


  pre_build:
    commands:
      - sonar_host_url="http://16.171.165.134:9000"
      - sonar_project_key="$PROJECT"
      - sonar_username=$(aws secretsmanager get-secret-value --secret-id $SONARQUBE_USER_CREDENTIAL_SECRET | jq -r '.SecretString' | jq -r '.username')
      - sonar_password=$(aws secretsmanager get-secret-value --secret-id $SONARQUBE_USER_CREDENTIAL_SECRET | jq -r '.SecretString' | jq -r '.password')
      - echo "Configuring Git for AWS CodeCommit..."
      - git config --global credential.helper '!aws codecommit credential-helper $@'
      - git config --global credential.UseHttpPath true
      - git checkout $SOURCE_COMMIT

  build:
    commands:
      - mvn license:format
      - mvn clean install 
      - mvn clean verify sonar:sonar -Dsonar.projectKey=$PROJECT  -Dsonar.projectName=$PROJECT -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.token=$SONAR_TOKEN
  post_build:
    commands:
      - sonar_link=$(echo $result | egrep -o "you can browse http://[^, ]+")
      - sonar_task_id=$(echo $result | egrep -o "task\?id=[^ ]+" | cut -d'=' -f2)
      - | # Allow time for SonarQube Background Task to complete
        stat="PENDING";
        while [ "$stat" != "SUCCESS" ]; do
          if [ $stat = "FAILED" ] || [ $stat = "CANCELLED" ]; then
            echo "SonarQube task $sonar_task_id failed";
            exit 1;
          fi
          stat=$(curl -u "$sonar_username:$sonar_password" $sonar_host_url/api/ce/task\?id=$sonar_task_id | jq -r '.task.status');
          echo "SonarQube analysis status is $stat";
          sleep 5;
        done
      - sonar_analysis_id=$(curl -u "$sonar_username:$sonar_password" $sonar_host_url/api/ce/task\?id=$sonar_task_id | jq -r '.task.analysisId')
      - quality_status=$(curl -u "$sonar_username:$sonar_password" $sonar_host_url/api/qualitygates/project_status\?analysisId=$sonar_analysis_id | jq -r '.projectStatus.status')
      - |
        if [ $quality_status = "ERROR" ]; then
          content=$(echo "SonarQube analysis complete. Quality Gate Failed.\n\nTo see why, $sonar_link");
        elif [ $quality_status = "OK" ]; then
          content=$(echo "SonarQube analysis complete. Quality Gate Passed.\n\nFor details, $sonar_link");
          aws codecommit update-pull-request-approval-state --pull-request-id $PULL_REQUEST_ID --approval-state APPROVE --revision-id $REVISION_ID;
        else
          content="An unexpected error occurred while attempting to analyze with SonarQube.";
        fi
      - aws codecommit post-comment-for-pull-request --pull-request-id $PULL_REQUEST_ID --repository-name $REPOSITORY_NAME --before-commit-id $DESTINATION_COMMIT --after-commit-id $SOURCE_COMMIT --content "$content"
  
artifacts:
  files: '**/*'
